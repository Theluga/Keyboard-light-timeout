#!/bin/bash

dim_time=10 # time to wait before dimming the screen
now_idle=false # flag to indicate if user is currently idle
idle_brightness=0 # dimmed keyboard brightness to set when idle
cpu_limit=19 # Priority of background process

# Set the priority of the current script
renice "$cpu_limit" "$$"

CurrentBrightness=$(dbus-send --system --print-reply --type=method_call --dest="org.freedesktop.UPower" "/org/freedesktop/UPower/KbdBacklight" "org.freedesktop.UPower.KbdBacklight.GetBrightness" | grep 'int32' | awk '{print $2}')



while true; do idle_time=$(dbus-send --session --dest=org.freedesktop.ScreenSaver --type=method_call --print-reply /ScreenSaver org.freedesktop.ScreenSaver.GetActiveTime); echo "$idle_time"; sleep 1; done
while true; do idle_time=$(dbus-send --session --print-reply --dest=org.freedesktop.ScreenSaver /org/freedesktop/ScreenSaver org.freedesktop.ScreenSaver.GetActiveTime | awk '/uint32/ {print $2}'); echo "$idle_time"; sleep 1; done



while true; do
    # Fetch the idle time using xprintidle
    idle_time=$(xprintidle)

    # Check if user has gone idle
    if ((idle_time >= dim_time * 1000)) && [ "$now_idle" = false ]; then
        # Save current brightness
        brightness_before=$(echo "$CurrentBrightness")
        # Dim the keyboard
        dbus-send --system --type=method_call  --dest="org.freedesktop.UPower" "/org/freedesktop/UPower/KbdBacklight" "org.freedesktop.UPower.KbdBacklight.SetBrightness" int32:"$idle_brightness"
        now_idle=true
        # Check if user has become active
    elif ((idle_time < dim_time * 1000)) && [ "$now_idle" = true ]; then
        # Set brightness to the value before dimming
        dbus-send --system --type=method_call  --dest="org.freedesktop.UPower" "/org/freedesktop/UPower/KbdBacklight" "org.freedesktop.UPower.KbdBacklight.SetBrightness" int32:"$brightness_before"
        now_idle=false
    fi


    sleep 1
done
